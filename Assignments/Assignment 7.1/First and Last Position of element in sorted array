// https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] ans = {-1, -1};
        
        // it check's for the first occurrence if target first
        int start = search(nums, target, true);
        // it check's for the last occurrence
        int end = search(nums, target, false);
        
        ans[0] = start;
        ans[1] = end;
        
        return ans;
    }
    
    // made this to return the index value
    int search(int[] nums, int target, boolean findStartIndex){
        int ans = -1;
        int start = 0;
        int end = nums.length - 1;

        while (start <= end){
          
            int mid = start + (end - start) / 2;

            if (target < nums[mid]){
                end = mid -1;
            }else if (target > nums[mid]){
                start = mid + 1;
            }else{
                ans = mid;
                if (findStartIndex){
                    end = mid -1;
                }else{
                    start = mid + 1;
                }
            }
        }
        return ans;
    }    
    
}
